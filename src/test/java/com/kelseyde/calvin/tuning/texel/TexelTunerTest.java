package com.kelseyde.calvin.tuning.texel;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kelseyde.calvin.engine.EngineConfig;
import com.kelseyde.calvin.engine.EngineInitializer;
import com.kelseyde.calvin.evaluation.Evaluator;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Arrays;
import java.util.function.Function;

@Disabled
public class TexelTunerTest {

    private final TexelTuner tuner = new TexelTuner("quiet_positions.txt");

    @Test
    public void tunePieceValuesAndPSTs() throws IOException {

//        int[] initialParams = new int[] {
//                0,   0,   0,   0,   0,   0,  0,   0,
//                98, 134,  61,  95,  68, 126, 34, -11,
//                -6,   7,  26,  31,  65,  56, 25, -20,
//                -14,  13,   6,  21,  23,  12, 17, -23,
//                -27,  -2,  -5,  12,  17,   6, 10, -25,
//                -26,  -4,  -4, -10,   3,   3, 33, -12,
//                -35,  -1, -20, -23, -15,  24, 38, -22,
//                0,   0,   0,   0,   0,   0,  0,   0,
//                -167, -89, -34, -49,  61, -97, -15, -107,
//                -73, -41,  72,  36,  23,  62,   7,  -17,
//                -47,  60,  37,  65,  84, 129,  73,   44,
//                -9,  17,  19,  53,  37,  69,  18,   22,
//                -13,   4,  16,  13,  28,  19,  21,   -8,
//                -23,  -9,  12,  10,  19,  17,  25,  -16,
//                -29, -53, -12,  -3,  -1,  18, -14,  -19,
//                -105, -21, -58, -33, -17, -28, -19,  -23,
//                -29,   4, -82, -37, -25, -42,   7,  -8,
//                -26,  16, -18, -13,  30,  59,  18, -47,
//                -16,  37,  43,  40,  35,  50,  37,  -2,
//                -4,   5,  19,  50,  37,  37,   7,  -2,
//                -6,  13,  13,  26,  34,  12,  10,   4,
//                0,  15,  15,  15,  14,  27,  18,  10,
//                4,  15,  16,   0,   7,  21,  33,   1,
//                -33,  -3, -14, -21, -13, -12, -39, -21,
//                32,  42,  32,  51, 63,  9,  31,  43,
//                27,  32,  58,  62, 80, 67,  26,  44,
//                -5,  19,  26,  36, 17, 45,  61,  16,
//                -24, -11,   7,  26, 24, 35,  -8, -20,
//                -36, -26, -12,  -1,  9, -7,   6, -23,
//                -45, -25, -16, -17,  3,  0,  -5, -33,
//                -44, -16, -20,  -9, -1, 11,  -6, -71,
//                -19, -13,   1,  17, 16,  7, -37, -26,
//                -28,   0,  29,  12,  59,  44,  43,  45,
//                -24, -39,  -5,   1, -16,  57,  28,  54,
//                -13, -17,   7,   8,  29,  56,  47,  57,
//                -27, -27, -16, -16,  -1,  17,  -2,   1,
//                -9, -26,  -9, -10,  -2,  -4,   3,  -3,
//                -14,   2, -11,  -2,  -5,   2,  14,   5,
//                -35,  -8,  11,   2,   8,  15,  -3,   1,
//                -1, -18,  -9,  10, -15, -25, -31, -50,
//                -65,  23,  16, -15, -56, -34,   2,  13,
//                29,  -1, -20,  -7,  -8,  -4, -38, -29,
//                -9,  24,   2, -16, -20,   6,  22, -22,
//                -17, -20, -12, -27, -30, -25, -14, -36,
//                -49,  -1, -27, -39, -46, -44, -33, -51,
//                -14, -14, -22, -46, -44, -30, -15, -27,
//                1,   7,  -8, -64, -43, -16,   9,   8,
//                -15,  36,  12, -54,   8, -28,  24,  14,
//                0,   0,   0,   0,   0,   0,   0,   0,
//                178, 173, 158, 134, 147, 132, 165, 187,
//                94, 100,  85,  67,  56,  53,  82,  84,
//                32,  24,  13,   5,  -2,   4,  17,  17,
//                13,   9,  -3,  -7,  -7,  -8,   3,  -1,
//                4,   7,  -6,   1,   0,  -5,  -1,  -8,
//                13,   8,   8,  10,  13,   0,   2,  -7,
//                0,   0,   0,   0,   0,   0,   0,   0,
//                -58, -38, -13, -28, -31, -27, -63, -99,
//                -25,  -8, -25,  -2,  -9, -25, -24, -52,
//                -24, -20,  10,   9,  -1,  -9, -19, -41,
//                -17,   3,  22,  22,  22,  11,   8, -18,
//                -18,  -6,  16,  25,  16,  17,   4, -18,
//                -23,  -3,  -1,  15,  10,  -3, -20, -22,
//                -42, -20, -10,  -5,  -2, -20, -23, -44,
//                -29, -51, -23, -15, -22, -18, -50, -64,
//                -14, -21, -11,  -8, -7,  -9, -17, -24,
//                -8,  -4,   7, -12, -3, -13,  -4, -14,
//                2,  -8,   0,  -1, -2,   6,   0,   4,
//                -3,   9,  12,   9, 14,  10,   3,   2,
//                -6,   3,  13,  19,  7,  10,  -3,  -9,
//                -12,  -3,   8,  10, 13,   3,  -7, -15,
//                -14, -18,  -7,  -1,  4,  -9, -15, -27,
//                -23,  -9, -23,  -5, -9, -16,  -5, -17,
//                13, 10, 18, 15, 12,  12,   8,   5,
//                11, 13, 13, 11, -3,   3,   8,   3,
//                7,  7,  7,  5,  4,  -3,  -5,  -3,
//                4,  3, 13,  1,  2,   1,  -1,   2,
//                3,  5,  8,  4, -5,  -6,  -8, -11,
//                -4,  0, -5, -1, -7, -12,  -8, -16,
//                -6, -6,  0,  2, -9,  -9, -11,  -3,
//                -9,  2,  3, -1, -5, -13,   4, -20,
//                -9,  22,  22,  27,  27,  19,  10,  20,
//                -17,  20,  32,  41,  58,  25,  30,   0,
//                -20,   6,   9,  49,  47,  35,  19,   9,
//                3,  22,  24,  45,  57,  40,  57,  36,
//                -18,  28,  19,  47,  31,  34,  39,  23,
//                -16, -27,  15,   6,   9,  17,  10,   5,
//                -22, -23, -30, -16, -16, -23, -36, -32,
//                -33, -28, -22, -43,  -5, -32, -20, -41,
//                -74, -35, -18, -18, -11,  15,   4, -17,
//                -12,  17,  14,  17,  17,  38,  23,  11,
//                10,  17,  23,  15,  20,  45,  44,  13,
//                -8,  22,  24,  27,  26,  33,  26,   3,
//                -18,  -4,  21,  24,  27,  23,   9, -11,
//                -19,  -3,  11,  21,  23,  16,   7,  -9,
//                -27, -11,   4,  13,  14,   4,  -5, -17,
//                -53, -34, -21, -11, -28, -14, -24, -43,
//                82, 337, 365, 477, 1025, 0,
//                94, 281, 297, 512,  936, 0
//        };
        int[] initialParams = new int[] {
                0, 0, 0, 0, 0, 0, 0, 0, 273, -145, -436, 134, 371, 17, -79, -11, -228, 38, 49, 110, 144, 659, 40, -109, -53, 96, 49, 120, 164, -17, 45, -46, -180, 51, -4, 107, 128, 59, -61, -252, -165, -51, 79, -13, 99, -60, 216, -69, -124, 120, -58, -74, 19, 255, 357, -63, 0, 0, 0, 0, 0, 0, 0, 0, -808, -89, -34, 430, 1692, 30, -974, 644, 234, 774, 1391, 1091, 1286, 1533, 462, 766, 1016, 987, 940, 1264, 1851, 2008, 1294, 1147, 854, 896, 874, 1124, 964, 912, 849, 1045, 812, 851, 1007, 956, 1035, 862, 864, 633, 634, 712, 939, 889, 762, 880, 840, 635, 492, 716, 843, 804, 894, 961, 657, 748, 416, 644, 295, 544, 552, 517, 614, 532, 210, -683, -51, -486, 93, 232, 182, 151, -25, 543, 405, 874, 349, 1042, 625, 720, 210, 352, 762, 727, 954, 1265, 1700, 733, 339, 510, 734, 733, 704, 500, 520, 589, 251, 612, 524, 817, 689, 587, 417, 333, 671, 766, 590, 566, 597, 618, 553, 505, 197, 734, 393, 465, 534, 860, 768, 576, 742, 574, 521, 248, 356, 377, 476, 380, 143, 633, 191, 658, 1438, 2696, 32, 338, 90, -89, 348, 253, -65, 1290, 261, 137, 194, 18, 163, 451, 544, 764, 780, 799, -145, -11, -26, 545, 24, 490, 343, 339, -36, -51, -26, -194, 248, -16, 6, -40, 82, -25, 99, 118, -10, 163, 546, 318, -33, -183, -45, -58, -176, -6, 81, -360, 16, 204, 134, 17, 179, 118, -168, 87, -237, 879, 1564, 779, 1594, 1403, -534, 460, 27, 72, 166, -416, -161, 776, 555, 1297, 254, -17, 182, 495, 460, 975, 462, 758, 404, 122, 479, 191, 412, 340, 622, 424, 292, 121, 66, 237, 229, 261, 450, -3, -61, 318, 271, 273, 198, 277, 173, 198, 486, 259, 372, 313, 439, 526, 636, 56, 160, 391, 280, 379, 86, 408, -574, -50, -1093, 22, 16, -13, -305, -34, 1297, 10, -996, 230, 1467, 821, -369, 1179, -38, 378, -9, 24, -1023, -13, -20, 1053, 225, 169, -17, 1075, -13, -296, -1131, -25, 329, -287, 684, 719, 627, -626, -288, -429, -666, -51, -269, 97, -319, -597, -701, -391, -14, -232, -510, 7, -427, -663, -642, -305, 0, -18, -814, 36, 105, -781, -147, -419, 129, 31, 0, 0, 0, 0, 0, 0, 0, 0, 1345, 1340, 1341, 1069, 770, 1235, 1268, 1178, 973, 859, 744, 578, 561, 372, 625, 835, 419, 343, 292, 169, 123, 235, 324, 282, 262, 262, 144, 108, 80, 151, 240, 187, 242, 306, 99, 233, 143, 210, 157, 168, 272, 263, 279, 7, 244, 191, 154, 158, 0, 0, 0, 0, 0, 0, 0, 0, -91, 17, -222, 355, -80, 298, 392, -332, 454, 171, -158, -59, 174, 38, 327, 44, -143, 145, 441, 140, 158, 102, 332, -41, 286, 418, 469, 573, 557, 588, 399, 21, 301, 449, 391, 472, 415, 391, 419, 95, -62, 300, 270, 446, 521, 316, 299, 329, -57, -169, 199, 362, -2, 475, 249, 231, -316, 54, 386, 306, 139, 103, 47, 521, 513, 298, 252, 519, -7, 414, 570, 495, 337, 339, 334, 179, 460, 330, 387, 221, 401, 423, 311, 410, 461, 357, 31, 451, 532, 9, 387, 568, 493, 345, 266, 241, 209, 306, 484, 570, 510, 465, 364, 96, 267, 452, 391, 537, 516, 458, 454, 362, 545, 237, 332, 503, 387, 478, 336, 256, 138, 104, -23, 444, 360, 169, 270, -17, 784, 593, 525, 516, 443, 11, 535, 556, 538, 764, 588, 656, 752, 402, 635, 578, 622, 734, 604, 532, 403, 292, 378, 332, 627, 602, 660, 424, 649, 544, 350, 433, 514, 648, 455, 643, 450, 521, 383, 372, 539, 609, 506, 446, 616, 523, 103, 375, 593, 537, 655, 529, 480, 438, 596, 361, 526, 3, 522, 658, 442, 490, 485, 323, 1606, 1149, 589, 1214, -70, 754, 1897, 1587, 1330, 1275, 1327, 2128, 1561, 1372, 1341, 127, 907, 949, 1560, 1160, 1934, 1194, 1410, 472, 778, 1253, 775, 1636, 1176, 1351, 1328, 915, 845, 1339, 1858, 1374, 1478, 1121, 1526, 1446, 1159, 884, 1414, 1093, 1336, 1344, 1669, 1044, -22, 1456, 705, 1279, 855, 688, 283, 1597, 926, -28, 1049, 644, 1176, -95, 1531, 1430, -769, 54, -191, -221, -314, 196, -177, -509, 136, 252, -339, -354, 257, 0, 196, 70, -209, 17, 354, 6, 104, 60, 331, 122, -245, -95, 67, 248, 172, 180, 107, 114, -417, -191, -25, 287, 144, 230, 206, -58, -48, -45, 98, 214, 290, 241, 43, -9, -235, -20, 185, 207, 251, 161, 34, -76, -166, -217, -208, -10, -131, -101, -229, -348, 537, 1744, 2284, 3548, 7424, 0, 508, 1712, 1768, 3207, 5991, 0
        };
        Function<int[], Evaluator> createEvaluatorFunction = (params) ->
        {
          EngineConfig config = EngineInitializer.loadDefaultConfig();
          config.getMiddlegameTables()[0] = Arrays.stream(params, 0, 64).toArray();
          config.getMiddlegameTables()[1] = Arrays.stream(params, 64, 128).toArray();
          config.getMiddlegameTables()[2] = Arrays.stream(params, 128, 192).toArray();
          config.getMiddlegameTables()[3] = Arrays.stream(params, 192, 256).toArray();
          config.getMiddlegameTables()[4] = Arrays.stream(params, 256, 320).toArray();
          config.getMiddlegameTables()[5] = Arrays.stream(params, 320, 384).toArray();
          config.getEndgameTables()[0] = Arrays.stream(params, 384, 448).toArray();
          config.getEndgameTables()[1] = Arrays.stream(params, 448, 512).toArray();
          config.getEndgameTables()[2] = Arrays.stream(params, 512, 576).toArray();
          config.getEndgameTables()[3] = Arrays.stream(params, 576, 640).toArray();
          config.getEndgameTables()[4] = Arrays.stream(params, 640, 704).toArray();
          config.getEndgameTables()[5] = Arrays.stream(params, 704, 768).toArray();
          config.getPieceValues()[0] = Arrays.stream(params, 768, 774).toArray();
          config.getPieceValues()[1] = Arrays.stream(params, 774, 780).toArray();
          return new Evaluator(config);
        };


        int[] bestParams = tuner.tune(initialParams, createEvaluatorFunction);
        System.out.println(Arrays.toString(bestParams));

    }

    @Test
    public void testExtractPSTs() throws JsonProcessingException {

        int[] params = new int[] {
                0, 0, 0, 0, 0, 0, 0, 0, 273, -145, -436, 134, 371, 17, -79, -11, -228, 38, 49, 110, 144, 659, 40, -109, -53, 96, 49, 120, 164, -17, 45, -46, -180, 51, -4, 107, 128, 59, -61, -252, -165, -51, 79, -13, 99, -60, 216, -69, -124, 120, -58, -74, 19, 255, 357, -63, 0, 0, 0, 0, 0, 0, 0, 0, -808, -89, -34, 430, 1692, 30, -974, 644, 234, 774, 1391, 1091, 1286, 1533, 462, 766, 1016, 987, 940, 1264, 1851, 2008, 1294, 1147, 854, 896, 874, 1124, 964, 912, 849, 1045, 812, 851, 1007, 956, 1035, 862, 864, 633, 634, 712, 939, 889, 762, 880, 840, 635, 492, 716, 843, 804, 894, 961, 657, 748, 416, 644, 295, 544, 552, 517, 614, 532, 210, -683, -51, -486, 93, 232, 182, 151, -25, 543, 405, 874, 349, 1042, 625, 720, 210, 352, 762, 727, 954, 1265, 1700, 733, 339, 510, 734, 733, 704, 500, 520, 589, 251, 612, 524, 817, 689, 587, 417, 333, 671, 766, 590, 566, 597, 618, 553, 505, 197, 734, 393, 465, 534, 860, 768, 576, 742, 574, 521, 248, 356, 377, 476, 380, 143, 633, 191, 658, 1438, 2696, 32, 338, 90, -89, 348, 253, -65, 1290, 261, 137, 194, 18, 163, 451, 544, 764, 780, 799, -145, -11, -26, 545, 24, 490, 343, 339, -36, -51, -26, -194, 248, -16, 6, -40, 82, -25, 99, 118, -10, 163, 546, 318, -33, -183, -45, -58, -176, -6, 81, -360, 16, 204, 134, 17, 179, 118, -168, 87, -237, 879, 1564, 779, 1594, 1403, -534, 460, 27, 72, 166, -416, -161, 776, 555, 1297, 254, -17, 182, 495, 460, 975, 462, 758, 404, 122, 479, 191, 412, 340, 622, 424, 292, 121, 66, 237, 229, 261, 450, -3, -61, 318, 271, 273, 198, 277, 173, 198, 486, 259, 372, 313, 439, 526, 636, 56, 160, 391, 280, 379, 86, 408, -574, -50, -1093, 22, 16, -13, -305, -34, 1297, 10, -996, 230, 1467, 821, -369, 1179, -38, 378, -9, 24, -1023, -13, -20, 1053, 225, 169, -17, 1075, -13, -296, -1131, -25, 329, -287, 684, 719, 627, -626, -288, -429, -666, -51, -269, 97, -319, -597, -701, -391, -14, -232, -510, 7, -427, -663, -642, -305, 0, -18, -814, 36, 105, -781, -147, -419, 129, 31, 0, 0, 0, 0, 0, 0, 0, 0, 1345, 1340, 1341, 1069, 770, 1235, 1268, 1178, 973, 859, 744, 578, 561, 372, 625, 835, 419, 343, 292, 169, 123, 235, 324, 282, 262, 262, 144, 108, 80, 151, 240, 187, 242, 306, 99, 233, 143, 210, 157, 168, 272, 263, 279, 7, 244, 191, 154, 158, 0, 0, 0, 0, 0, 0, 0, 0, -91, 17, -222, 355, -80, 298, 392, -332, 454, 171, -158, -59, 174, 38, 327, 44, -143, 145, 441, 140, 158, 102, 332, -41, 286, 418, 469, 573, 557, 588, 399, 21, 301, 449, 391, 472, 415, 391, 419, 95, -62, 300, 270, 446, 521, 316, 299, 329, -57, -169, 199, 362, -2, 475, 249, 231, -316, 54, 386, 306, 139, 103, 47, 521, 513, 298, 252, 519, -7, 414, 570, 495, 337, 339, 334, 179, 460, 330, 387, 221, 401, 423, 311, 410, 461, 357, 31, 451, 532, 9, 387, 568, 493, 345, 266, 241, 209, 306, 484, 570, 510, 465, 364, 96, 267, 452, 391, 537, 516, 458, 454, 362, 545, 237, 332, 503, 387, 478, 336, 256, 138, 104, -23, 444, 360, 169, 270, -17, 784, 593, 525, 516, 443, 11, 535, 556, 538, 764, 588, 656, 752, 402, 635, 578, 622, 734, 604, 532, 403, 292, 378, 332, 627, 602, 660, 424, 649, 544, 350, 433, 514, 648, 455, 643, 450, 521, 383, 372, 539, 609, 506, 446, 616, 523, 103, 375, 593, 537, 655, 529, 480, 438, 596, 361, 526, 3, 522, 658, 442, 490, 485, 323, 1606, 1149, 589, 1214, -70, 754, 1897, 1587, 1330, 1275, 1327, 2128, 1561, 1372, 1341, 127, 907, 949, 1560, 1160, 1934, 1194, 1410, 472, 778, 1253, 775, 1636, 1176, 1351, 1328, 915, 845, 1339, 1858, 1374, 1478, 1121, 1526, 1446, 1159, 884, 1414, 1093, 1336, 1344, 1669, 1044, -22, 1456, 705, 1279, 855, 688, 283, 1597, 926, -28, 1049, 644, 1176, -95, 1531, 1430, -769, 54, -191, -221, -314, 196, -177, -509, 136, 252, -339, -354, 257, 0, 196, 70, -209, 17, 354, 6, 104, 60, 331, 122, -245, -95, 67, 248, 172, 180, 107, 114, -417, -191, -25, 287, 144, 230, 206, -58, -48, -45, 98, 214, 290, 241, 43, -9, -235, -20, 185, 207, 251, 161, 34, -76, -166, -217, -208, -10, -131, -101, -229, -348, 537, 1744, 2284, 3548, 7424, 0, 508, 1712, 1768, 3207, 5991, 0
        };
        EngineConfig config = EngineInitializer.loadDefaultConfig();
        config.getMiddlegameTables()[0] = Arrays.stream(params, 0, 64).toArray();
        config.getMiddlegameTables()[1] = Arrays.stream(params, 64, 128).toArray();
        config.getMiddlegameTables()[2] = Arrays.stream(params, 128, 192).toArray();
        config.getMiddlegameTables()[3] = Arrays.stream(params, 192, 256).toArray();
        config.getMiddlegameTables()[4] = Arrays.stream(params, 256, 320).toArray();
        config.getMiddlegameTables()[5] = Arrays.stream(params, 320, 384).toArray();
        config.getEndgameTables()[0] = Arrays.stream(params, 384, 448).toArray();
        config.getEndgameTables()[1] = Arrays.stream(params, 448, 512).toArray();
        config.getEndgameTables()[2] = Arrays.stream(params, 512, 576).toArray();
        config.getEndgameTables()[3] = Arrays.stream(params, 576, 640).toArray();
        config.getEndgameTables()[4] = Arrays.stream(params, 640, 704).toArray();
        config.getEndgameTables()[5] = Arrays.stream(params, 704, 768).toArray();
        config.getPieceValues()[0] = Arrays.stream(params, 768, 774).toArray();
        config.getPieceValues()[1] = Arrays.stream(params, 774, 780).toArray();
        System.out.println(new ObjectMapper().writeValueAsString(config));

    }

}